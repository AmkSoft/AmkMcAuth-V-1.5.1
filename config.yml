# See https://dev.bukkit.org/projects/amkmcauth/pages/configyml for original/full description 
login:
  # Should the plugin be disabled if online mode is on?
  disable_if_online_mode: false
  # Require a Capcha selection when a player joins the server, default = false?
  CapchaOnJoin: false
  # Hide/Clear Player Inventory on Join if not logged in (prevents inventory-peeking, default = false)
  hide_inventory_on_join: false
  # Show usage of menu/inventory/password-block as hint on register/login/changepass? (default = false)
  ShowMenuBlockOption: false
  # If player is not entering a password, assume automatic 'menu' (inventory) as password block input?
  # so if player only enters: t\register, t\l (t\login) or t\changepass  (and no password is given) 
  # AmkMcAuth assumes 'menu' is to be used where the "missing" password should be typed. (Default = false) 
  AssumeAutoMenu: false
  # Require a login to play?
  require: true
  permission:
    # Are you using an permission plugin (like Pex,PermissionX eg.) to allow players to login then you can  
    # instruct AmkMcAuth to check (set enabled to true) the permission node (node name in permission) on login.  
    enabled: false
    permission: "amkauth.requirelogin"
  # New players have to register, 
  registration: "password"
  #  Configure: "password" if (default) password registration is used.
  #  Configure: "email" if email registration is to be used, 
  #             AmkMcAuth will then send a computer generated password to the player's 
  #             email address so they can log in using that password.
  #  Force players to set Email-Address when they do not have set one? (true/false)  
  forcesetmail: false
  # Interval (in seconds) to remind players to set email address if forcesetmail=true.
  emailremindtime: 120

  # If you are Using email for player registration (registration: "email") you need to set these too: 
  regemlfromnice: "Server Nice Name"
  regemlfromemail: "Sender-Email-Address"
  regemlsmtpservr: "Smtp-Mail-Server"
  regemlloginname: "Smtp-Login-name"
  regemlloginpswd: "Smtp-Login-Password"
  emailsubject:    "MineCraft Player Registration Information"  
  emailbodytxt:    "Login Password for Player: %1$s is set to %2$s\nYou can change this after login using the changepassword command\nHappy Mining on our MineCraft Server."
  confirmbodytxt:  "Confirm your new email-address by issuing\nthis player command: %1$s"  
  recoversubject:  "Requested login password recovery"
  recoverbodytxt:  "Login Password for Player: %1$s is reset to %2$s\nYou can change this after login using the changepassword command\nHappy Mining on our MineCraft Server."

  # How long to wait for a player to be kicked (allways) when the login fails on the FIRST
  # time when email registration is used (Lock-Out reset on wrong email-address) in seconds
  email_wait_kick: 120
  
  # Should a player that is already online and logged-in be kicked if another player attempts to join as him?
  kick_if_already_online: false  
  
  # Should a player that types in a wrong password immediately be kicked?
  kick_on_password_fail: false
  
  # Set players that are not logged in to invisible mode?
  invisible_mode: false
  # Set players that are not logged in to adventure mode?
  adventure_mode: false
  # Teleport players to spawn?
  teleport_to_spawn: false
  # If teleport_to_spawn: true
  tpToSpawnTrue:
    # Spawn in special world (Default="": use default server spawn setting)
    teleportToSpawnWorld: ""
    # useSpawnAtLocation to Spawn at specific Location XYZ coordinates (default=false: use default server spawn setting)
    useSpawnAtLocation: false
    # if useSpawnAtLocation=true: Spawn at this XYZ coordinates location (must be a valid spawn point/block, otherwise horror??)
    spawnAtLocationX: 0
    spawnAtLocationY: 66
    spawnAtLocationZ: 0
 
  godmode:
    # Should players that have yet to login have godmode?
    enabled: true
    after_login:
      # Enable god mode after the player logs in?
      enabled: true
      # Length in seconds
      length: 10.0
  
  remind:
    # Remind players to login/register if they have not?
    enabled: true
    # Interval (in seconds) to remind players to login/register
    interval: 10.0
    kick:
      # Kick players that take too long to log in?
      enabled: false
      # How long to wait for a player to login before kicking them in seconds
      wait: 30.0

  restrictions:
    chat:
      # Allow chat from players NOT logged in?
      allowed: false
      # If chat.allowed is true, prefix all messages from players not logged in with the following
      prefix: "[NLI] "
    commands:
      # Allow commands from players NOT logged in?
      allowed: false
      # Commands to be allowed if commands.allowed is false. Useful for on-join commands.
      # Aliases can be used unless the command has an argument. 
      # In the default values, "!" will work for "unstuck," but
      # "we cui" will not work for "worldedit cui."
      exempt:
      - "!"
      - "we cui"
    movement:
      # Allow looking around (only changing vision, not walking)
      look_around: true
      # Allow walking around (includes changing vision)?
      walk: false
      # if 'walk' is set to false (no movement), what is the maximum time to Allow walking around
      # before players location is reset (could be a NoCheatPlus Bug workaround)?
      # time in miliseconds (seconds*1000). Set to zero (0) ignores this setting (this is default).
      allowmovetime: 0
  

emailaddresses:
  # emailaddresses to reject on registration and set-emailaddress, add more to reject. Case-insensitive
  # AmkMcAuth tests the emailaddress entered by a Player to see if it contains any of these strings.
  disallowed:
  - "spamgourmet."
  - "@guerillamail"

sessions:
  # Login sessions. If you log out and log back in, you will not be prompted for a password again if these are configured.
  # Enabled login sessions?
  enabled: true
  # Length in minutes for a session to last. A session starts at player quit.
  length: 15.0
  # Check the IP of the player logging in again to make sure it matches? This should probably be true.
  check_ip: true
  # Register/Login/ChangePassword using Command (shows up in Logs) or using hidden Chat messages.
  # This controls what helpmessage is shown to User when help is needed.
  # Possible Values: "Commands"  or "HiddenChat". Default is "Commands".
  LoginCommandsMessage: Commands

  # You can issue these Console commands on Player-Action. Multiple Lines Allowed.
  # It is possible to the $P as a placeholder for the playername in the console command.
  # The command usage and format has to follow the command documentation or rules, see tellraw as an axample:
  ##   - tellraw $P ["",{"text":"Amk","color":"aqua"},{"text":"McAuth","color":"green"},{"text":"!","color":"red"}]
  # You can delay the command execution several ticks by starting the command with this special parameter: 'AmkWait(DelayTicks)'
  # This AmkWait(DelayTicks) parameter will removced from the Commando string before execution of the command. 
  # where 'DelayTicks' is the number of game-ticks the command has to wait before it is executed, see tellraw as an axample:    
  ##   - AmkWait(100) tellraw $P ["",{"text":"Amk","color":"aqua"},{"text":"McAuth","color":"green"},{"text":"!","color":"red"}]
  # will issue the command 5 seconds (20 ticks = 1 second) after the event occurs.
  
  #OnJoin, If a player connects to the server (Join Event)
  OnJoin:
  - ""
  #OnRgstr, After the player is connected and has to register his (new) playername.
  OnRgstr:
  - ""
  #OnGrace, After the player is connected and was LoggedIn before: Grace-Login)
  OnGrace:
  - ""
  #OnLogin, If a player loggs in using "/login" command
  OnLogin:
  - ""
  #OnLogof, If a player loggs off using "/logoff" command
  OnLogof:
  - ""
  #OnExit, If a player disconnects from the server (Leave Event)
  OnExit:
  - ""
  

usernames:
  # Verify if the username is a valid Minecraft username?
  verify: true
  # Regular expression to check usernames against. If you don't know regular expressions, don't tinker with this.
  regex: "[\\w]{2,16}"

passwords:
  # Encryption type to use on passwords. Can be any Java type or AMKAUTH, which is SHA-512 rehashed 25 times.
  hash_type: "AMKAUTH"
  # Passwords to reject on registration and warn about on login. Case-insensitive
  # The special password: "#NoPlayerName#" means: Player cannot use his PlayerName as a password
  # Remove this special password if you allow players to use their playername as password.
  disallowed:
  - "password"
  - "[password]"
  - "#NoPlayerName#"

saving:
  # Userdata saving options
  # How often (in minutes) to save the player profiledata to the disk. Profiledata will be stored locally 
  # and accessed locally, but it must be saved to persist. The data will also be saved when the plugin is  
  # disabled as well (like a server stop/restart). This cannot be set to lower than 1.
  interval: 10.0
  
  # Every time a player Joins your server, AmkMcAuth checks to see if the player profiledata 
  # already has been loaded into memory. If not, it loads it from File or from MySQL.   
  # How long (in days) should AmkMcAuth keep player profiledata of inactive players in internal memory?
  # If the last login time of a player is older then remove_inactive_after DAYS, AmkMcAuth will remove
  # this playerdata from internal memory to free up the used memory to store player profiledata.
  # The data data is not lost, it will be loaded from File or MySQL if player is logging in again.
  # If this is set to 0 (or negative) AmkMcAuth will not remove profiledata of inactive players. 
  remove_inactive_after: 10
  
  # Should the plugin check for old userdata on startup? This will convert any usernames into UUIDs. 
  # This should be true at least for the first run on the UUID system. If you are using MySQL (see below)
  # this setting is also used to store the player profiledata files into the MySQL database where it is 
  # managed and protected by MySQL. This will probably take a LONG time if you have a BIG Player-base 
  # (don't leave it true all the time to speed up server start up time )!!!
  check_old_userdata: true
  
  # By default AmkMcAuth stores the player profiledata locally in User Profile files.
  # The default is used if there is no mysql_hostname value, like: mysql_hostname: "". If you want to use
  # MySQL as storage for the payer profiledata you have to set the mysql_hostname value, like "localhost".
  # If this value is set: AmkMcAuth tries to connect to the MySQL database server residing on   
  # host: mysql_hostname, using port: mysql_portnmbr. After that, AmkMcAuth opens   
  # database: mysql_database using UserName: mysql_username with Password: mysql_password
  # You need to set these values the same as you configured it on the MySQL Database server.
  # You can use the mysql_dboption value to set special DatabaseOptions, like don't use SSL.     
  # If you set the option: mysql_filemode to "Backup" AmkMcAuth is using the User ProfileFiles as a backup
  # for the MySQL Database action: All Data is stored in MySQL, and Backupped to Local ProfileFiles.
  # So AmkMcAuth can run in three different modes:
  # 1: mysql_hostname is empty (""): Only ProfileFiles are used (mysql_filemode is auto-set (defaults) to 'Save'),
  # 2: mysql_hostname has hostname (like "localhost") and mysql_filemode: "Backup", Use MySQL and use ProfileFiles as Backup     
  # 3: mysql_hostname has hostname (like "localhost") and mysql_filemode: "", (empty) use MySQL Exclusively (No ProfileFiles!)     
  mysql_filemode: "Save"
  mysql_hostname: ""
  mysql_portnmbr: "3306"
  mysql_database: "AmkMcData"
  mysql_dboption: "useSSL=false"
  mysql_username: "AmkMcUser"
  mysql_password: "AmkMcPswd"

general:
  # Metrics Enabled by default
  metrics_enabled: true
  # Controls how many registered users are allowed per IP-Address (check on registration). 
  # Setting this to zero (0) will disable this feature, no Ip-Address counting on registration.
  users_per_ipaddress: 0
  # Controls how many registered users are allowed per Email-Address (check on registration). 
  # Setting this to zero (0) will disable this feature, no Email-Address counting on registration.
  users_per_emailaddress: 0
  # What language file should AmkMcAuth use? (defaults to en_us.properties). But you can translate it to your native Language.
  # More User created language files can be found at: https://dev.bukkit.org/projects/amkmcauth/pages/lang
  language_file: "lang/en_us.properties"
  # If you have translated your language file and you like it to be public for other users, you can contact me.
  # I will then upload it to the Bukkit-AmkMcAuth language website with your name as contributor and maintainer. 
  